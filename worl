#!/bin/bash
# 'Worl' is an ASCII game written in bash about creating worlds and watching them go through life.

worl=~/.worl
worlds=$(echo $(ls $worl))
clear

function worldgen {
        read -rp "New world name: " world
        clear
	while :; do
		read -rp "Choose the horizontal size for your world (10-100): " hsize
		if [[ $hsize -lt 1 ]]; then
			printf "\nOnly type numbers between 1 and 100!\n\n"
			sleep 2
			clear
			continue 2
		elif [[ $hsize -gt 100 ]]; then
			printf "\nOnly type numbers between 1 and 100!\n\n"
			sleep 2
			clear
			continue 2
		fi
	break;
	done
	printf "\nGenerating your world..."
	sleep 1
        while :; do
		clear
		printf "LOADING..."
		random=$((1 + RANDOM % 16))
		case $random in
		    1|2|3|4) printf "." >> $worl/$world.txt ;;
		    5|6|7) printf "T" >> $worl/$world.txt ;; 
		    8|9) printf "0" >> $worl/$world.txt ;;
		    10) printf "@" >> $worl/$world.txt ;;
		esac
		size=$(wc -m < $worl/$world.txt)
		clear
		printf "LOADING..."
		case $size in
			$hsize|$((hsize * 2 + 1))|$((hsize * 3 + 2))|$((hsize * 4 + 3))|$((hsize * 5 + 4))|$((hsize * 6 + 5))|$((hsize * 7 + 6))|$((hsize * 8 + 7))|$((hsize * 9 + 8))|$((hsize * 10 + 9))|$((hsize * 11 + 10))|$((hsize * 12 + 11))|$((hsize * 13 + 12))|$((hsize * 14 + 13))|$((hsize * 15 + 14))|$((hsize * 16 + 15))|$((hsize * 17 + 16))|$((hsize * 18 + 17))|$((hsize * 19 + 18))|$((hsize * 20 + 19))|$((hsize * 21 + 20))|$((hsize * 22 + 21))|$((hsize * 23 + 22))|$((hsize * 24 + 23))|$((hsize * 25 + 24))|$((hsize * 26 + 25))|$((hsize * 27 + 26))|$((hsize * 28 + 27))|$((hsize * 29 + 28))) printf "\n" >> $worl/$world.txt ;;
			$((hsize * 30 + 29))) printf "\n" >> $worl/$world.txt && exec "$0" ;;
		esac
                continue
        break;
        done
}

function tip {
	printf "\nType 'start' to start the simulation, 'exit' to quit Worl and 'help' for a list of commands.\n\n"
}

function current {
	printf "Current world: $world\n\n"
}

function simulate {
	current
	sed -i 's/T@/.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@T/@./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@0/@./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/0@/.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/.@/@./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/T@/.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@T/@./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@0/@./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/0@/.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@@/o./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@./.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@./.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@./.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/T@/.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@T/@./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@0/@./g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/0@/.@/g' $worl/$world.txt && cat $worl/$world.txt
	printf "\n> "
	sleep 0.5
	clear
	current
	sed -i 's/@@/.o/g' $worl/$world.txt && cat $worl/$world.txt
	
	printf "\nThe end!\n"
	tip
}

if [[ -d $worl ]]; then
	if [[ $worlds = "" ]]; then
		worldgen
	else
		printf "List of worlds: \n\n" && ls $worl | sed -e 's/.txt//g' && printf "\n"
	        read -rp "Load world: " world
	        clear
		while :; do
			if [[ -f $worl/$world.txt ]]; then
				current
		       	 	cd $worl &&  cat $world.txt && cd ~
				tip
			else
				printf "There's no such world as '$world'!\n"
				sleep 2
				exec "$0"
			fi
		break;
		done
		while :; do
			read -rp "> " input
			case $input in
				exit) clear && printf "cya!\n\n";;
				help) printf "\nexit - Exit Worl :(\nhelp - Show a list of commands.\nnew - Create a new world.\nload - Load a different world.\nclear - Reset the terminal.\ndel - Delete the current world.\nstart - Start the Simulation.\n\n" && continue 2 ;;
				new) clear && worldgen ;;
				load) exec "$0" ;;
				clear) clear && current && cat $worl/$world.txt && tip && cd ~ && continue 2 ;;
				del) rm $worl/$world.txt && printf "\nWorld deleted!\n\n" && printf "> " && sleep 2 && exec "$0" ;;
				start)
					while :; do
						clear && current && cat $worl/$world.txt && cd ~ && printf "\n> " && sleep 1 && clear && simulate && continue 2
					break;
					done
				;;
				*) printf "\nCommand not found.\n\n" && continue 2 ;;
			esac
		break;
		done
	fi
else
		mkdir $worl
		worldgen	
fi
