#!/bin/bash
# 'Worl' is an ASCII game written in bash about creating worlds and watching them go through life.

clear
worl=~/.worl
worlds=$(echo $(ls $worl))

function worldgen {
	
        read -rp "New world name: " world
        clear
	printf "Generating your world..."
	sleep 1

        while :; do
		
		clear
		printf "LOADING..."
                random=$(echo $((1 + RANDOM % 16)))

                if [[ $random = 1 ]]; then
                        printf "." >> $worl/$world.txt
                elif [[ $random = 2 ]]; then
                        printf "." >> $worl/$world.txt
                elif [[ $random = 3 ]]; then
                        printf "." >> $worl/$world.txt
                elif [[ $random = 4 ]]; then
                        printf "T" >> $worl/$world.txt
                elif [[ $random = 5 ]]; then
                        printf "T" >> $worl/$world.txt
                elif [[ $random = 6 ]]; then
                        printf "0" >> $worl/$world.txt
                elif [[ $random = 7 ]]; then
                        printf "@" >> $worl/$world.txt
                fi

                size=$(echo $(wc -c $worl/$world.txt))
		clear
		printf "LOADING..."

                if [[ $size = "100 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
                elif [[ $size = "201 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
                elif [[ $size = "302 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "403 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
                elif [[ $size = "504 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "605 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
                elif [[ $size = "706 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "807 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
                elif [[ $size = "908 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1009 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1110 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1211 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1312 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1413 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1514 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1615 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1716 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1817 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "1918 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2019 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2120 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2221 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2322 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2423 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2524 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2625 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2726 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2827 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
		elif [[ $size = "2928 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
                elif [[ $size = "3029 $worl/$world.txt" ]]; then
                        printf "\n" >> $worl/$world.txt
			exec "$0"
                fi
                continue
        break;
        done
}

if [[ -d $worl ]]; then
	if [[ $worlds = "" ]]; then
		worldgen
	else
		printf "List of worlds: \n\n" && ls $worl | sed -e 's/.txt//g' && printf "\n"
	        read -rp "Load world: " world
	        clear

		while :; do
			if [[ -f $worl/$world.txt ]]; then
			        printf "Current world: $world\n"
		       	 	cd $worl && printf "\n" && cat $world.txt && cd ~
				printf "\nType 'exit' to quit Worl or 'help' for a list of commands.\n" 
			else
				printf "There's no such world as '$world'!\n"
				sleep 2
				exec "$0"
			fi
		break;
		done

		while :; do
			read -rp "> " input
			if [[ $input = "exit" ]]; then
				clear
				printf "cya!\n\n"
				exit 1
			elif [[ $input = "help" ]]; then
				printf "\nexit - Exit Worl :(\nhelp - Show a list of commands.\nnew - Create a new world.\nload - Load a different world.\nclear - Clear the terminal.\ndel - Delete the current world.\n\n"
				continue 2
			elif  [[ $input = "new" ]]; then
				clear
				worldgen
			elif [[ $input = "load" ]]; then
				exec "$0"
			elif [[ $input = "clear" ]]; then
				clear
			        printf "Current world: $world\n"
		       	 	cd $worl && printf "\n" && cat $world.txt && cd ~
				printf "\nType 'exit' to quit Worl or 'help' for a list of commands.\n"
				continue 2
			elif [[ $input = "del" ]]; then
				rm $worl/$world.txt
				printf "\nWorld deleted!\n\n"
				printf "> "
				sleep 2
				exec "$0"
			else
				printf "\nCommand not found.\n\n"
				continue 2
			fi
		break;
		done
	fi
else
		mkdir $worl
		worldgen	
fi
